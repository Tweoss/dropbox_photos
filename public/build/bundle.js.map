{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/dbx_classes.ts","../../node_modules/svelte/store/index.mjs","../../src/store.ts","../../src/Image.svelte","../../src/LivePhoto.svelte","../../src/Event.svelte","../../src/Button.svelte","../../node_modules/svelte/easing/index.mjs","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","export { DbxIndex, DbxImage, DbxMetadata, FileType, DbxIndexEntry };\nclass DbxImage {\n    constructor(path) {\n        this.path = path;\n    }\n    /**\n     * returns a promise that resolves to an image thumbnail\n     */\n    async loadThumbnail(access_token, size = \"w64h64\") {\n        const response = await fetch(\"https://content.dropboxapi.com/2/files/get_thumbnail_v2\", {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${access_token}`,\n                \"Dropbox-API-Arg\": `{\"resource\":{\".tag\":\"path\",\"path\":\"${this.path}\"},\"size\":{\".tag\":\"${size}\"}}`,\n            },\n        });\n        const blob = await response.blob();\n        return URL.createObjectURL(blob);\n    }\n    /**\n     * returns a promise that resolves to an image\n     */\n    async loadImage(access_token) {\n        const response = await fetch('https://content.dropboxapi.com/2/files/download', {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${access_token}`,\n                'Dropbox-API-Arg': `{\"path\":\"${this.path}\"}`\n            }\n        });\n        const blob = await response.blob();\n        return URL.createObjectURL(blob);\n    }\n    /**\n     * returns a promise that resolves to a URL for the video blob (if the photo is a live photo)\n     */\n    async loadVideo(access_token, video_path) {\n        const response = await fetch('https://content.dropboxapi.com/2/files/download', {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${access_token}`,\n                'Dropbox-API-Arg': `{\"path\":\"${video_path}\"}`\n            }\n        });\n        const blob = await response.blob();\n        return URL.createObjectURL(blob);\n    }\n}\nvar FileType;\n(function (FileType) {\n    FileType[\"Image\"] = \"Image\";\n    FileType[\"Video\"] = \"video\";\n})(FileType || (FileType = {}));\nclass DbxMetadata {\n    constructor(path) {\n        this.dimensions = null;\n        this.path = path;\n    }\n    /**\n     * initializes the metadata using dropbox api data\n     */\n    async init(access_token) {\n        const response = await fetch(\"https://api.dropboxapi.com/2/files/get_metadata\", {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${access_token}`,\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                include_media_info: true,\n                path: this.path,\n            }),\n        });\n        const json = await response.json();\n        this.name = json.name;\n        this.last_modified = json.server_modified;\n        this.time_taken = json.media_info.metadata.time_taken;\n        this.dimensions = json.media_info.metadata.dimensions;\n        if (json.media_info.metadata[\".tag\"] === \"video\") {\n            this.filetype = FileType.Video;\n            this.duration = json.media_info.metadata.duration;\n        }\n        else if (json.media_info.metadata[\".tag\"] === \"photo\") {\n            this.filetype = FileType.Image;\n        }\n        return this;\n    }\n}\nclass DbxIndexEntry {\n    constructor() {\n        this.is_selected = false;\n        this.metadata = null;\n    }\n    /**\n     * initializes the index entry using dropbox api data\n     */\n    async init(access_token, path) {\n        this.metadata = await new DbxMetadata(path).init(access_token);\n        return this;\n    }\n    /**\n     * sets the metadata of a corresponding dropbox video for live photos\n     */\n    set_live_video_data(live_video_data) {\n        this.live_video_metadata = live_video_data;\n    }\n}\nclass DbxIndex {\n    constructor() {\n        /** @type {Map<String, DbxIndexEntry>} */\n        this.entries = new Map();\n    }\n    /**\n     * parse and check url for access token\n     */\n    async valid_token_set(url, custom_token) {\n        var _a, _b;\n        const token = custom_token || ((_b = (_a = url.split('#')[1]) === null || _a === void 0 ? void 0 : _a.split('&')[0]) === null || _b === void 0 ? void 0 : _b.split('=')[1]);\n        if (token) {\n            return fetch('https://api.dropboxapi.com/2/check/user', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({})\n            }).then(res => {\n                if (res.status == 200) {\n                    this.access_token = token;\n                    return true;\n                }\n            });\n        }\n        else {\n            return Promise.resolve(false);\n        }\n    }\n    /**\n     * redirect to dropbox's authentication for obtaining an access token\n     */\n    redirect_to_auth(location) {\n        location.href = `https://www.dropbox.com/oauth2/authorize?client_id=nyma8gjtfb5kq8n&response_type=token&redirect_uri=${location.protocol}//${location.host + location.pathname}`;\n    }\n    /**\n     * builds an index of files inside this folder from the dropbox api\n     */\n    async build_index(base_path = \"\") {\n        let has_more_files = true;\n        while (has_more_files) {\n            const response = await fetch(\"https://api.dropboxapi.com/2/files/list_folder\", {\n                method: \"POST\",\n                headers: {\n                    Authorization: `Bearer ${this.access_token}`,\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    path: base_path,\n                    recursive: false,\n                }),\n            });\n            const json = await response.json();\n            has_more_files = json.has_more;\n            await Promise.all(json.entries.map(async (entry) => {\n                return new DbxIndexEntry()\n                    .init(this.access_token, entry.path_lower)\n                    .then((index_entry) => {\n                    this.entries.set(entry.name, index_entry);\n                });\n            }));\n        }\n    }\n    /**\n     * adds live video data to the index\n     * take video and image pairs that have the same name and\n     * add the video to the image entry as a live video\n     */\n    collapse_index() {\n        for (const [name, entry] of this.entries) {\n            // find videos\n            if (name.endsWith(\".mov\")) {\n                // and a corresponding image\n                const image_entry = this.entries.get(name.substring(0, name.length - 4) + \".JPG\");\n                if (image_entry) {\n                    // then set the metadata in the image\n                    image_entry.set_live_video_data(entry.metadata);\n                    // and remove the video entry\n                    this.entries.delete(name);\n                }\n            }\n        }\n    }\n    /**\n     * returns a sorted by timestamp array of string file names\n     */\n    get_sorted_permutation() {\n        const array = [...this.entries.entries()].map((entry) => [\n            entry[0],\n            new Date(entry[1].metadata.time_taken),\n        ]);\n        array.sort((a, b) => a[1].valueOf() - b[1].valueOf());\n        return array.map((entry) => entry[0]);\n    }\n    /**\n     * returns an array of arrays of string file names\n     */\n    get_sorted_event_array() {\n        // check if two metadatas are within 8 hours of one another\n        const same_event = (a, b) => {\n            return (Math.abs(a.getTime() - b.getTime()) <\n                8 * 60 * 60 * 1000);\n        };\n        const sorted = this.get_sorted_permutation();\n        // create events\n        let current_event = 0;\n        let events = [];\n        let dates = [];\n        for (let i = 0; i < sorted.length; i++) {\n            const name = sorted[i];\n            const entry = this.entries.get(name);\n            if (events[current_event]) {\n                const date = new Date(entry.metadata.time_taken);\n                if (same_event(date, dates[current_event][0])) {\n                    events[current_event].push(entry);\n                    dates[current_event].push(date);\n                }\n                else {\n                    current_event += 1;\n                    events[current_event] = [entry];\n                    dates[current_event] = [new Date(entry.metadata.time_taken)];\n                }\n            }\n            else {\n                events[current_event] = [entry];\n                dates[current_event] = [new Date(entry.metadata.time_taken)];\n            }\n        }\n        return events;\n    }\n    handle_keydown(event, store, entries) {\n        var _a;\n        let output = store;\n        let updated = false;\n        const prevent_default = (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n        };\n        switch (event.key) {\n            case \"ArrowLeft\":\n                output.entry_index == 0 ?\n                    output.event_index == 0 ?\n                        null\n                        :\n                            (output.event_index -= 1, output.entry_index = entries[output.event_index].length - 1, updated = true)\n                    :\n                        (output.entry_index -= 1, updated = true);\n                prevent_default(event);\n                break;\n            case \"ArrowRight\":\n                output.entry_index == ((_a = entries[output.event_index]) === null || _a === void 0 ? void 0 : _a.length) - 1 ?\n                    output.event_index == entries.length - 1 ?\n                        null\n                        :\n                            (output.event_index += 1, output.entry_index = 0, updated = true)\n                    :\n                        (output.entry_index += 1, updated = true);\n                prevent_default(event);\n                break;\n            case \"ArrowUp\":\n                output.file_info = true;\n                updated = true;\n                prevent_default(event);\n                break;\n            case \"ArrowDown\":\n                output.file_info = false;\n                updated = true;\n                prevent_default(event);\n                break;\n            case \" \":\n                if (output.event_index != -1 && output.entry_index != -1) {\n                    output.maximized = !output.maximized;\n                    updated = true;\n                    prevent_default(event);\n                }\n                break;\n            case \"Escape\":\n                if (output.maximized) {\n                    output.maximized = false;\n                    updated = true;\n                    prevent_default(event);\n                }\n                break;\n            default:\n                break;\n        }\n        return { new_store: output, updated };\n    }\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\nexport const store = writable({\n    event_index: -1,\n    entry_index: -1,\n    maximized: false,\n    file_info: false,\n});\n","<script lang=\"ts\">\n    import { DbxImage, DbxIndexEntry } from \"./dbx_classes\";\n    import { onMount } from \"svelte\";\n    import { store } from \"./store\";\nimport { loop_guard } from \"svelte/internal\";\n\n    export let ACCESS_TOKEN: string;\n    export let image_entry: DbxIndexEntry;\n    export let default_data: string = \"\";\n    export let event_index: number;\n    export let entry_index: number;\n\n    let image_data: string = default_data;\n\n    let full_image: string;\n    let initial_image: string;\n    let thumbnail: string;\n\n    let selected: boolean = false;\n    let maximized: boolean = false;\n\n    const image = new DbxImage(image_entry.metadata.path);\n    let calculated_dimensions: {\n        top: number;\n        left: number;\n        scale_class: string;\n    } = {\n        top: 0,\n        left: 0,\n        scale_class: \"\",\n    };\n\n    const calculate_dimensions = () => {\n        const dimensions = image_entry.metadata.dimensions;\n        if (dimensions.height == dimensions.width) {\n            return { top: 0, left: 0, scale_class: \"\" };\n        } else if (dimensions.height > dimensions.width) {\n            // gap on the left and right\n            return {\n                top: 0,\n                left: (100 * (1 - dimensions.width / dimensions.height)) / 2,\n                scale_class: \"width-auto\",\n            };\n        } else if (dimensions.width > dimensions.height) {\n            // gap on the top and bottom\n            return {\n                top: (100 * (1 - dimensions.height / dimensions.width)) / 2,\n                left: 0,\n                scale_class: \"height-auto\",\n            };\n        }\n    };\n    const onChangeVisibility = (\n        entries: IntersectionObserverEntry[],\n        _observer: IntersectionObserver\n    ) => {\n        if (entries[0].isIntersecting) {\n            initial_image\n                ? (image_data = initial_image)\n                : image\n                      .loadThumbnail(ACCESS_TOKEN, \"w256h256\")\n                      .then((data: string) => {\n                          initial_image = data;\n                          thumbnail ? null : URL.revokeObjectURL(thumbnail);\n                          image_data = initial_image;\n                          calculated_dimensions = calculate_dimensions();\n                      });\n        } else {\n            thumbnail\n                ? 0 // no reverting to thumbnail. thumbnail will be revoked\n                : image.loadThumbnail(ACCESS_TOKEN).then((data: string) => {\n                      thumbnail = data;\n                      image_data = thumbnail;\n                      calculated_dimensions = calculate_dimensions();\n                  });\n        }\n    };\n\n    let observer: IntersectionObserver;\n    let element: Element;\n    onMount(() => {\n        let options: IntersectionObserverInit = {};\n        observer = new IntersectionObserver(onChangeVisibility, options);\n        observer.observe(element);\n    });\n    store.subscribe((store) => {\n        selected =\n            store.event_index == event_index &&\n            store.entry_index == entry_index;\n        // only if it is selected and maximized now\n        if (store.maximized && selected) {\n            maximized = true;\n        } else {\n            maximized = false;\n        }\n        if (selected) {\n            element.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n        }\n        // if in the same or neighbouring events as selected and maximized or is currently selected and not maximized\n        if (\n            (store.maximized &&\n                Math.abs(store.event_index - event_index) <= 1) ||\n            selected\n        ) {\n            full_image\n                ? (image_data = full_image)\n                : image.loadImage(ACCESS_TOKEN).then((data: string) => {\n                      full_image = data;\n                      image_data = full_image;\n                      calculated_dimensions = calculate_dimensions();\n                  });\n        }\n    });\n    let drag = {\n        init: 0,\n        move: 0,\n    };\n</script>\n\n<div class=\"container\">\n    <img\n        bind:this=\"{element}\"\n        src=\"{image_data}\"\n        alt=\"{image_entry.metadata.name}\"\n        class=\"{$store.event_index == event_index &&\n        $store.entry_index == entry_index\n            ? 'selected'\n            : ''} {calculated_dimensions.scale_class} {maximized\n            ? 'maximized'\n            : ''}\"\n        on:load|once=\"{() => {\n            URL.revokeObjectURL(image_data);\n        }}\"\n        on:click=\"{(e) => {\n            maximized\n                ? null\n                : store.update((previous) => {\n                      previous.event_index = event_index;\n                      previous.entry_index = entry_index;\n                      return previous;\n                  });\n        }}\"\n        on:dblclick=\"{() => {\n            maximized\n                ? store.update((previous) => {\n                      previous.maximized = false;\n                      return previous;\n                  })\n                : store.update((previous) => {\n                      previous.maximized = true;\n                      return previous;\n                  });\n        }}\"\n        on:touchstart=\"{(e) => {\n            maximized ? (drag.init = e.touches[0].clientY) : null;\n        }}\"\n        on:touchmove=\"{(e) => {\n            maximized ? (drag.move = e.touches[0].clientY) : null;\n        }}\"\n        on:touchend=\"{() => {\n            if (!maximized) {\n                return;\n            }\n            const diff_y = drag.init - drag.move;\n            if (diff_y < -30) {\n                store.update((previous) => {\n                    previous.maximized = false;\n                    return previous;\n                });\n            }\n        }}\"\n        style=\"top: {maximized\n            ? '0'\n            : calculated_dimensions.top}%; left: {maximized\n            ? '0'\n            : calculated_dimensions.left}%;\"\n    />\n</div>\n\n<style>\n    div.container {\n        position: relative;\n        height: 200px;\n        width: 200px;\n        display: inline-block;\n        margin: 0.5em;\n    }\n    img {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 100%;\n        object-fit: contain;\n        box-shadow: 3px 3px 10px black;\n    }\n    img:hover {\n        box-shadow: 6px 6px 15px black;\n    }\n    img.selected {\n        border: 2px solid blue;\n        border-radius: 2px;\n        margin: -2px;\n        box-shadow: 6px 6px 20px black;\n    }\n    img.maximized {\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        background-color: #222c;\n        border: none;\n        margin: 0px;\n    }\n    .width-auto {\n        width: auto;\n    }\n    .height-auto {\n        height: auto;\n    }\n</style>\n","<script lang=\"ts\">\n    import { DbxImage, DbxIndexEntry } from \"./dbx_classes\";\n    import { onMount } from \"svelte\";\n    import { store } from \"./store\";\n    import { loop_guard } from \"svelte/internal\";\n\n    export let ACCESS_TOKEN: string;\n    export let image_entry: DbxIndexEntry;\n    export let default_data: string = \"\";\n    export let event_index: number;\n    export let entry_index: number;\n\n    let image_data: string = default_data;\n    let video_data: string = null;\n\n    let full_image: string;\n    let initial_image: string;\n    let thumbnail: string;\n\n    let selected: boolean = false;\n    let maximized: boolean = false;\n\n    const image = new DbxImage(image_entry.metadata.path);\n    let calculated_dimensions: {\n        top: number;\n        left: number;\n        scale_class: string;\n    } = {\n        top: 0,\n        left: 0,\n        scale_class: \"\",\n    };\n\n    const calculate_dimensions = () => {\n        const dimensions = image_entry.metadata.dimensions;\n        if (dimensions.height == dimensions.width) {\n            return { top: 0, left: 0, scale_class: \"\" };\n        } else if (dimensions.height > dimensions.width) {\n            // gap on the left and right\n            return {\n                top: 0,\n                left: (100 * (1 - dimensions.width / dimensions.height)) / 2,\n                scale_class: \"width-auto\",\n            };\n        } else if (dimensions.width > dimensions.height) {\n            // gap on the top and bottom\n            return {\n                top: (100 * (1 - dimensions.height / dimensions.width)) / 2,\n                left: 0,\n                scale_class: \"height-auto\",\n            };\n        }\n    };\n    const onChangeVisibility = (\n        entries: IntersectionObserverEntry[],\n        _observer: IntersectionObserver\n    ) => {\n        if (entries[0].isIntersecting) {\n            initial_image\n                ? (image_data = initial_image)\n                : image\n                      .loadThumbnail(ACCESS_TOKEN, \"w640h480\")\n                      .then((data: string) => {\n                          initial_image = data;\n                          image_data = initial_image;\n                          calculated_dimensions = calculate_dimensions();\n                      });\n            video_data\n                ? null\n                : image\n                      .loadVideo(\n                          ACCESS_TOKEN,\n                          image_entry.live_video_metadata.path\n                      )\n                      .then((data: string) => {\n                          video_data = data;\n                      });\n        } else {\n            thumbnail\n                ? 0 // not reverting to thumbnail. otherwise use this: (image_data = thumbnail)\n                : image.loadThumbnail(ACCESS_TOKEN).then((data: string) => {\n                      thumbnail = data;\n                      image_data = thumbnail;\n                      calculated_dimensions = calculate_dimensions();\n                  });\n        }\n    };\n\n    let observer: IntersectionObserver;\n    let element: HTMLVideoElement;\n\n    onMount(() => {\n        let options = {\n            root: undefined,\n        };\n        observer = new IntersectionObserver(onChangeVisibility, options);\n        observer.observe(element);\n    });\n    store.subscribe((store) => {\n        selected =\n            store.event_index == event_index &&\n            store.entry_index == entry_index;\n        // only if it is selected and maximized now\n        if (store.maximized && selected) {\n            maximized = true;\n            element.play();\n        } else {\n            maximized = false;\n        }\n        if (selected) {\n            element.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n            full_image\n                ? (image_data = full_image)\n                : image.loadImage(ACCESS_TOKEN).then((data: string) => {\n                      full_image = data;\n                      image_data = full_image;\n                      calculated_dimensions = calculate_dimensions();\n                  });\n        }\n    });\n    let drag = {\n        init: 0,\n        move: 0,\n    };\n</script>\n\n<div class=\"container\">\n    <!-- svelte-ignore a11y-media-has-caption -->\n    <video\n        bind:this=\"{element}\"\n        poster=\"{image_data}\"\n        class=\"{selected\n            ? 'selected'\n            : ''} {calculated_dimensions.scale_class} {maximized\n            ? 'maximized'\n            : ''}\"\n        on:load|once=\"{() => {\n            URL.revokeObjectURL(video_data);\n            URL.revokeObjectURL(image_data); // no need for image_data anyway\n        }}\"\n        on:focus=\"{() => {\n            maximized ? null : element.play();\n        }}\"\n        on:mouseover=\"{() => {\n            maximized\n                ? null\n                : element.play().then(\n                      () => {},\n                      () => {\n                          /* ignore the failure to play */\n                      }\n                  );\n        }}\"\n        on:mouseleave=\"{() => {\n            if (!maximized) {\n                element.pause();\n                element.currentTime = 0;\n                element.load();\n            }\n        }}\"\n        on:click=\"{(e) => {\n            // prevent any passthrough\n            !maximized && e.target == element\n                ? store.update((previous) => {\n                      previous.event_index = event_index;\n                      previous.entry_index = entry_index;\n                      return previous;\n                  })\n                : null;\n        }}\"\n        on:dblclick=\"{() => {\n            maximized\n                ? store.update((previous) => {\n                      previous.maximized = false;\n                      return previous;\n                  })\n                : store.update((previous) => {\n                      previous.maximized = true;\n                      return previous;\n                  });\n        }}\"\n        on:touchstart=\"{(e) => {\n            maximized ? (drag.init = e.touches[0].clientY) : null;\n        }}\"\n        on:touchmove=\"{(e) => {\n            maximized ? (drag.move = e.touches[0].clientY) : null;\n        }}\"\n        on:touchend=\"{() => {\n            if (!maximized) {\n                return;\n            }\n            const diff_y = drag.init - drag.move;\n            if (diff_y < -30) {\n                store.update((previous) => {\n                    previous.maximized = false;\n                    return previous;\n                });\n            }\n        }}\"\n        style=\"top: {maximized\n            ? '0'\n            : calculated_dimensions.top}%; left: {maximized\n            ? '0'\n            : calculated_dimensions.left}%;\"\n        controls=\"{maximized || null}\"\n        playsinline\n    >\n        <source src=\"{video_data}\" type=\"video/mp4\" />\n        Sorry, your browser doesn't support embedded videos.\n    </video>\n\n    <i\n        style=\"top: {calculated_dimensions.top}%; left: {calculated_dimensions.left}%; color: lightgray;\"\n        class=\"{element ? 'fa fa-play-circle-o ' : ''} {maximized\n            ? 'hidden'\n            : ''}\"></i>\n</div>\n\n<style>\n    div.container {\n        position: relative;\n        height: 200px;\n        width: 200px;\n        display: inline-block;\n        margin: 0.5em;\n    }\n    video {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 100%;\n        object-fit: contain;\n        box-shadow: 3px 3px 10px black;\n    }\n    video:hover {\n        box-shadow: 6px 6px 15px black;\n    }\n    video.selected {\n        border: 2px solid blue;\n        border-radius: 2px;\n        margin: -2px;\n        box-shadow: 6px 6px 20px black;\n    }\n    video.maximized {\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        background-color: #222c;\n        border: none;\n        margin: 0px;\n    }\n    video.maximized::-webkit-media-controls-fullscreen-button {\n        display: none !important;\n    }\n    i {\n        position: absolute;\n    }\n    i.hidden {\n        display: none;\n    }\n    .width-auto {\n        width: auto;\n    }\n    .height-auto {\n        height: auto;\n    }\n</style>\n","<script lang=\"ts\">\n    import { DbxIndexEntry, FileType } from \"./dbx_classes\";\n\n    import Image from \"./Image.svelte\";\n    import LivePhoto from \"./LivePhoto.svelte\";\n\n    export let ACCESS_TOKEN: string;\n    export let event_contents: DbxIndexEntry[] = [];\n    export let event_index: number;\n\n    const timestamp = () => {\n        let first = new Date(event_contents[0].metadata.time_taken);\n        let last = new Date(\n            event_contents[event_contents.length - 1].metadata.time_taken\n        );\n        first.setTime(first.getTime() + first.getTimezoneOffset() * 60 * 1000);\n        last.setTime(last.getTime() + last.getTimezoneOffset() * 60 * 1000);\n        // if same timestamp or just a single element\n        if (\n            event_contents.length == 1 ||\n            event_contents[0].metadata.time_taken ==\n                event_contents[event_contents.length - 1].metadata.time_taken\n        ) {\n            return (\n                first.toLocaleDateString(\"en-US\", {\n                    dateStyle: \"full\",\n                }) +\n                \", \" +\n                first.getHours().toString().padStart(2, \"0\") +\n                \":\" +\n                first.getMinutes().toString().padStart(2, \"0\")\n            );\n        }\n        // if same day\n        if (\n            first.getDate() == last.getDate() &&\n            first.getMonth() == last.getMonth() &&\n            first.getFullYear() == last.getFullYear()\n        ) {\n            return `${first.toLocaleString(\"en-US\", {\n                dateStyle: \"full\",\n                timeStyle: \"short\",\n                hour12: false,\n            })}-${last.getHours().toString().padStart(2, \"0\")}:${last\n                .getMinutes()\n                .toString()\n                .padStart(2, \"0\")}`;\n        }\n        // default\n        return `${first.toLocaleString(\"en-US\", {\n            dateStyle: \"full\",\n            timeStyle: \"short\",\n            hour12: false,\n        })}—${last.toLocaleString(\"en-US\", {\n            dateStyle: \"full\",\n            timeStyle: \"short\",\n            hour12: false,\n        })}`;\n    };\n</script>\n\n<div>\n    <h2 class=\"timestamps\">{timestamp()}</h2>\n    {#each event_contents as element, entry_index}\n        {#if element.metadata.filetype == FileType.Image}\n            {#if element.live_video_metadata}\n                <LivePhoto\n                    ACCESS_TOKEN=\"{ACCESS_TOKEN}\"\n                    image_entry=\"{element}\"\n                    default_data=\"./placeholder.png\"\n                    event_index=\"{event_index}\"\n                    entry_index=\"{entry_index}\"\n                />\n            {:else}\n                <Image\n                    ACCESS_TOKEN=\"{ACCESS_TOKEN}\"\n                    image_entry=\"{element}\"\n                    default_data=\"./placeholder.png\"\n                    event_index=\"{event_index}\"\n                    entry_index=\"{entry_index}\"\n                />\n            {/if}\n        {:else}\n            <img src=\"placeholder.png\" alt=\"placeholder\" />\n        {/if}\n    {/each}\n</div>\n\n<style>\n    div {\n        text-align: left;\n    }\n    h2.timestamps {\n        color: #7cb0e0;\n    }\n</style>\n","<script lang=\"ts\">\n    import { cubicOut } from \"svelte/easing\";\n    let show_button = true;\n    (function (a) {\n        if (\n            /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\n                a\n            ) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n                a.slice(0, 4)\n            )\n        )\n            show_button = false;\n    })(navigator.userAgent || navigator.vendor);\n    let button_text = \"Interact to enable video!\";\n    const clickHandler = () => {\n        button_text = \"Enabled!\";\n        show_button = false;\n    };\n    function hide_button(_, { duration }) {\n        return {\n            duration,\n            css: (t: number) => {\n                return `\n                transform: scale(${cubicOut(t)});\n                `;\n            },\n        };\n    }\n</script>\n\n<svelte:window\n    on:click=\"{(_) => clickHandler()}\"\n    on:keydown=\"{(_) => clickHandler()}\"\n/>\n\n{#if show_button}\n    <button on:click=\"{clickHandler}\" out:hide_button=\"{{ duration: 1000 }}\"\n        >{button_text}\n    </button>\n{/if}\n\n<style>\n    button {\n        background-color: #ff3e00;\n        color: white;\n        border: none;\n        border-radius: 5px;\n        padding: 10px;\n        font-size: 1.2em;\n        font-weight: 100;\n        cursor: pointer;\n        transition: all 0.2s ease-in-out;\n        margin: 1em;\n    }\n</style>\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","<script lang=\"ts\">\n    import { DbxIndex, DbxIndexEntry } from \"./dbx_classes\";\n    import Event from \"./Event.svelte\";\n    import Button from \"./Button.svelte\";\n    import { store } from \"./store.js\";\n    import { get } from \"svelte/store\";\n\n    // array of events\n    // events are arrays of index entries\n    let events_entries: (DbxIndexEntry | null)[][] = [];\n    let index = new DbxIndex();\n    index\n        // check that the token in the index is valid\n        .valid_token_set(window.location.href)\n        // if not valid, redirect to dropbox authentication\n        .then((result) =>\n            result ? 0 : index.redirect_to_auth(window.location)\n        )\n        .then(() => {\n            console.log(index);\n            // build index\n            index.build_index(\"/photos\").then(() => {\n                // collapse video and images for live photos\n                index.collapse_index();\n                events_entries = index.get_sorted_event_array();\n            });\n        });\n    let drag = {\n        init: 0,\n        move: 0,\n    }\n</script>\n\n<svelte:window\n    on:keydown=\"{(e) => {\n        let { new_store, updated } = index.handle_keydown(\n            e,\n            get(store),\n            events_entries\n        );\n        if (updated) {\n            store.set(new_store);\n        }\n    }}\"\n    on:touchstart=\"{(e) => {\n        drag.init = e.touches[0].clientX;\n    }}\"\n    on:touchmove=\"{(e) => {\n        drag.move = e.touches[0].clientX;\n    }}\"\n    on:touchend=\"{() => {\n        const diff_x = drag.init - drag.move;\n        const fire = (key) => {\n            let { new_store, updated } = index.handle_keydown(\n                new KeyboardEvent('keydown', {\n                    key,\n                }),\n                get(store),\n                events_entries\n            );\n            if (updated) {\n                store.set(new_store);\n            }\n        };\n\n        if (diff_x > 100) {\n            fire('ArrowRight');\n            return;\n        } else if (diff_x < -100) {\n            fire('ArrowLeft');\n            return;\n        }\n    }}\"\n/>\n\n<main>\n    <!-- font-awesome icons -->\n    <link\n        rel=\"stylesheet\"\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n    />\n    <h1>🐟Photos🐈</h1>\n    <Button />\n    {#each events_entries as event, event_index}\n        <Event\n            ACCESS_TOKEN=\"{index.access_token}\"\n            event_contents=\"{event}\"\n            event_index=\"{event_index}\"\n        />\n    {/each}\n    {#if $store.file_info}\n        <div>\n            <p>HI</p>\n        </div>\n    {/if}\n</main>\n\n<style>\n    main {\n        text-align: center;\n        padding: 1em;\n        margin: 0 auto;\n    }\n\n    h1 {\n        color: #ff3e00;\n        text-transform: uppercase;\n        font-size: 4em;\n        font-weight: 100;\n    }\n\n    :global(body) {\n        background-color: #202020;\n    }\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {}\n});\nexport default app;\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","sheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_style","key","important","removeProperty","setProperty","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","promise","flushidx","flush","saved_component","update","pop","has","add","fragment","before_update","dirty","ctx","after_update","dispatch","direction","kind","dispatchEvent","type","detail","bubbles","cancelable","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_out_transition","params","animation_name","config","running","group","go","easing","tick","css","start_time","end_time","fulfill","loop","then","end","reset","globals","globalThis","global","create_component","mount_component","customElement","m","new_on_destroy","map","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","splice","$set","$$props","obj","$$set","keys","DbxImage","constructor","path","async","access_token","response","fetch","method","headers","Authorization","blob","URL","createObjectURL","video_path","FileType","DbxMetadata","dimensions","body","JSON","stringify","include_media_info","json","last_modified","server_modified","time_taken","media_info","metadata","filetype","Video","Image","DbxIndexEntry","is_selected","set_live_video_data","live_video_data","live_video_metadata","DbxIndex","entries","custom_token","_a","_b","token","res","status","redirect_to_auth","location","protocol","pathname","base_path","has_more_files","recursive","has_more","all","entry","path_lower","index_entry","collapse_index","endsWith","image_entry","substring","get_sorted_permutation","array","sort","valueOf","get_sorted_event_array","sorted","current_event","events","dates","date","Math","abs","getTime","handle_keydown","output","updated","prevent_default","preventDefault","stopPropagation","entry_index","event_index","file_info","maximized","new_store","subscriber_queue","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","writable","img","img_src_value","scale_class","top","left","div","full_image","initial_image","thumbnail","ACCESS_TOKEN","default_data","image_data","selected","image","calculated_dimensions","calculate_dimensions","height","width","onChangeVisibility","_observer","isIntersecting","$$invalidate","loadThumbnail","revokeObjectURL","observer","IntersectionObserver","observe","scrollIntoView","behavior","loadImage","drag","move","$$value","touches","clientY","source","source_src_value","video","video_class_value","controls","video_controls_value","video_data","loadVideo","undefined","play","pause","currentTime","load","h2","each_blocks","event_contents","first","last","setTime","getTimezoneOffset","toLocaleDateString","dateStyle","getHours","toString","padStart","getMinutes","getDate","getMonth","getFullYear","toLocaleString","timeStyle","hour12","button","wholeText","button_outro","create_if_block","show_button","navigator","userAgent","vendor","test","slice","button_text","clickHandler","cubicOut","if_block","main","link","h1","events_entries","valid_token_set","result","console","log","build_index","clientX","diff_x","fire","KeyboardEvent"],"mappings":"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"}